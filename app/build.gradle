/*
 *
 *  * Copyright (C) 2018 The Android Open Source Project
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  *      http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion build_versions.target_sdk
  buildToolsVersion build_versions.build_tools
  defaultConfig {
    applicationId "com.android.samples.arch.componentsbasicsample"
    minSdkVersion build_versions.min_sdk
    targetSdkVersion build_versions.target_sdk
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  dataBinding {
    enabled = true
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

kotlin {
  experimental {
    coroutines 'enable'
  }
}

dependencies {
  // See versions.gradle file
//  implementation fileTree(dir: 'libs', include: ['*.jar'])
//  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
//  implementation "com.android.support:appcompat-v7:$versions.support"
//  implementation "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
//  implementation "com.android.support:design:$versions.support"
//
//  // LiveData + ViewModel
//  implementation "android.arch.lifecycle:extensions:$versions.lifecycle"
//  implementation "android.arch.persistence.room:runtime:$versions.room"
//
//  // Navigation
//
//  implementation "android.arch.navigation:navigation-fragment:$versions.navigation"
//  implementation "android.arch.navigation:navigation-ui:$versions.navigation"
//
//  // Coroutine
//  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
//
//  // Dagger
//  implementation "com.google.dagger:dagger:$versions.dagger"
//  implementation "com.google.dagger:dagger-android:$versions.dagger"
//  implementation "com.google.dagger:dagger-android-support:$versions.dagger"
//  kapt "com.google.dagger:dagger-compiler:$versions.dagger"
//  kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
//
//  //Retrofit
//  implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
//  implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
//  implementation "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
//  implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
//
//  implementation "com.jakewharton.timber:timber:$versions.timber"

  implementation deps.kotlin.stdlib
  implementation deps.kotlin.coroutines
  implementation deps.support.app_compat
  implementation deps.support.constraint_layout
  implementation deps.support.design
//  implementation deps.support.recyclerview
//  implementation deps.support.cardview

  implementation deps.lifecycle.runtime
  implementation deps.lifecycle.extensions
  implementation deps.lifecycle.java8
  implementation deps.room.runtime

  implementation deps.navigation.fragment
  implementation deps.navigation.fragment_ui

  implementation deps.dagger.runtime
  implementation deps.dagger.android
  implementation deps.dagger.android_support

  implementation deps.retrofit.runtime
  implementation deps.retrofit.gson
  implementation deps.retrofit.mock
  implementation deps.okhttp_logging_interceptor

  implementation deps.timber

  kapt deps.dagger.android_support_compiler
  kapt deps.dagger.compiler
  kapt deps.room.compiler
  kapt deps.lifecycle.compiler


//  implementation deps.glide.runtime


  testImplementation deps.junit
  testImplementation deps.mock_web_server
  testImplementation(deps.arch_core.testing, {
    exclude group: 'com.android.support', module: 'support-compat'
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-core-utils'
  })
  testImplementation deps.mockito.core

  androidTestImplementation deps.navigation.testing_ktx
  androidTestImplementation deps.support.app_compat
//  androidTestImplementation deps.support.recyclerview
//  androidTestImplementation deps.support.cardview
  androidTestImplementation deps.support.design

  androidTestImplementation(deps.espresso.core, {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
  })
  androidTestImplementation(deps.espresso.contrib, {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
  })

  androidTestImplementation(deps.arch_core.testing, {
  })
  androidTestImplementation deps.dexmaker
  androidTestImplementation deps.mockito.core, { exclude group: 'net.bytebuddy' }
}
